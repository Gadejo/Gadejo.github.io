{
  "version": 3,
  "sources": ["../../../node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../node_modules/unenv/dist/runtime/node/console.mjs", "../../../node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../../node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../node_modules/unenv/dist/runtime/node/console.mjs", "../../node_modules/unenv/dist/runtime/mock/noop.mjs", "../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../../functions/api/auth.ts", "../../functions/api/data.ts", "../../functions/api/kv-session.ts", "../../functions/api/settings.ts", "../../functions/api/templates.ts", "../../functions/_middleware.ts", "../pages-YCQnts/functionsWorker-0.6319389083192735.mjs/functionsRoutes-0.6339076628685194.mjs", "../../node_modules/path-to-regexp/src/index.ts", "../../node_modules/wrangler/templates/pages-template-worker.ts", "../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../pages-YCQnts/bundle-vTTYLl/middleware-insertion-facade.js", "../../node_modules/wrangler/templates/middleware/common.ts", "../pages-YCQnts/bundle-vTTYLl/middleware-loader.entry.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-YlpBru/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-YlpBru/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\corin\\Documents\\b\\app\\.wrangler\\tmp\\dev-5DoCX6",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nexport const { exit, platform, nextTick } = getBuiltinModule(\n  \"node:process\"\n);\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  hrtime: UnenvHrTime,\n  nextTick\n});\nexport const {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  finalization,\n  features,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  on,\n  off,\n  once,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n} = unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nexport const { exit, platform, nextTick } = getBuiltinModule(\n  \"node:process\"\n);\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  hrtime: UnenvHrTime,\n  nextTick\n});\nexport const {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  finalization,\n  features,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  on,\n  off,\n  once,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n} = unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "// Cloudflare Pages Functions for Multi-User Authentication\nimport { Env } from '../types';\n\nexport const onRequestPost: PagesFunction<Env> = async (context) => {\n  const { request, env } = context;\n  \n  try {\n    const body = await request.json() as { \n      action: 'register' | 'login' | 'verify' | 'logout' | 'refresh' | 'getUsers' | 'switchUser',\n      email?: string,\n      password?: string,\n      displayName?: string,\n      token?: string\n    };\n    \n    const { action, email, password, displayName, token } = body;\n    const db = env.DB;\n    \n    switch (action) {\n      case 'register':\n        return await registerUser(db, email!, password!, displayName!);\n      \n      case 'login':\n        return await loginUser(db, email!, password!, request);\n      \n      case 'verify':\n        return await verifyToken(db, token!);\n      \n      case 'logout':\n        return await logoutUser(db, token!);\n      \n      case 'refresh':\n        return await refreshToken(db, token!);\n      \n      case 'getUsers':\n        return await getRegisteredUsers(db);\n      \n      case 'switchUser':\n        return await switchUser(db, email!, password!, request);\n      \n      default:\n        return new Response(JSON.stringify({ error: 'Invalid action' }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n    }\n    \n  } catch (error) {\n    console.error('Auth error:', error);\n    return new Response(JSON.stringify({ error: 'Internal server error' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n};\n\nasync function registerUser(db: D1Database, email: string, password: string, displayName: string) {\n  if (!email || !password || !displayName) {\n    return new Response(JSON.stringify({ error: 'Email, password, and display name required' }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  // Check if email is valid\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!emailRegex.test(email)) {\n    return new Response(JSON.stringify({ error: 'Invalid email format' }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  try {\n    // Check if user already exists\n    const existingUser = await db\n      .prepare('SELECT id FROM users WHERE email = ?')\n      .bind(email.toLowerCase())\n      .first();\n      \n    if (existingUser) {\n      return new Response(JSON.stringify({ error: 'User already exists' }), {\n        status: 409,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const userId = generateId();\n    const passwordHash = await hashPassword(password);\n    \n    // Create user\n    await db\n      .prepare(`\n        INSERT INTO users (id, email, display_name, password_hash, last_active)\n        VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)\n      `)\n      .bind(userId, email.toLowerCase(), displayName, passwordHash)\n      .run();\n\n    // Create user profile\n    await db\n      .prepare(`\n        INSERT INTO user_profiles (user_id, learning_goals, favorite_subjects, study_schedule)\n        VALUES (?, ?, ?, ?)\n      `)\n      .bind(userId, JSON.stringify([]), JSON.stringify([]), JSON.stringify({}))\n      .run();\n\n    return new Response(JSON.stringify({ \n      success: true, \n      userId,\n      message: 'User registered successfully'\n    }), {\n      status: 201,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Registration error:', error);\n    return new Response(JSON.stringify({ error: 'Registration failed' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function loginUser(db: D1Database, email: string, password: string, request: Request) {\n  if (!email || !password) {\n    return new Response(JSON.stringify({ error: 'Email and password required' }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  try {\n    // Get user by email\n    const user = await db\n      .prepare(`\n        SELECT id, email, display_name, password_hash, is_active, avatar_url,\n               total_study_time, total_sessions, current_streak, longest_streak\n        FROM users \n        WHERE email = ? AND is_active = 1\n      `)\n      .bind(email.toLowerCase())\n      .first() as any;\n      \n    if (!user) {\n      return new Response(JSON.stringify({ error: 'User not found' }), {\n        status: 404,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n    \n    const isValid = await verifyPassword(password, user.password_hash);\n    \n    if (!isValid) {\n      return new Response(JSON.stringify({ error: 'Invalid password' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Create session token\n    const token = generateToken();\n    const tokenHash = await hashPassword(token);\n    const expiresAt = new Date();\n    expiresAt.setDate(expiresAt.getDate() + 7); // 7 days\n\n    const userAgent = request.headers.get('User-Agent') || '';\n    const ipAddress = request.headers.get('CF-Connecting-IP') || \n                     request.headers.get('X-Forwarded-For') || \n                     'unknown';\n\n    // Create session\n    await db\n      .prepare(`\n        INSERT INTO user_sessions (id, user_id, token_hash, expires_at, user_agent, ip_address)\n        VALUES (?, ?, ?, ?, ?, ?)\n      `)\n      .bind(generateId(), user.id, tokenHash, expiresAt.toISOString(), userAgent, ipAddress)\n      .run();\n\n    // Update last login\n    await db\n      .prepare('UPDATE users SET last_login = CURRENT_TIMESTAMP, last_active = CURRENT_TIMESTAMP WHERE id = ?')\n      .bind(user.id)\n      .run();\n\n    // Get user profile\n    const profile = await db\n      .prepare('SELECT * FROM user_profiles WHERE user_id = ?')\n      .bind(user.id)\n      .first() as any;\n\n    return new Response(JSON.stringify({ \n      success: true, \n      user: {\n        id: user.id,\n        email: user.email,\n        displayName: user.display_name,\n        avatarUrl: user.avatar_url,\n        totalStudyTime: user.total_study_time,\n        totalSessions: user.total_sessions,\n        currentStreak: user.current_streak,\n        longestStreak: user.longest_streak,\n        level: profile?.level || 1,\n        totalXp: profile?.total_xp || 0\n      },\n      token,\n      expiresAt: expiresAt.toISOString()\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Login error:', error);\n    return new Response(JSON.stringify({ error: 'Login failed' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function verifyToken(db: D1Database, token: string) {\n  if (!token) {\n    return new Response(JSON.stringify({ error: 'Token required' }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  try {\n    const tokenHash = await hashPassword(token);\n    \n    const session = await db\n      .prepare(`\n        SELECT s.user_id, s.expires_at, u.email, u.display_name, u.is_active, u.avatar_url,\n               u.total_study_time, u.total_sessions, u.current_streak, u.longest_streak,\n               p.level, p.total_xp\n        FROM user_sessions s\n        JOIN users u ON s.user_id = u.id\n        LEFT JOIN user_profiles p ON u.id = p.user_id\n        WHERE s.token_hash = ? AND s.is_active = 1 AND u.is_active = 1\n      `)\n      .bind(tokenHash)\n      .first() as any;\n      \n    if (!session) {\n      return new Response(JSON.stringify({ error: 'Invalid token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n    \n    // Check if token is expired\n    if (new Date(session.expires_at) < new Date()) {\n      await db\n        .prepare('UPDATE user_sessions SET is_active = 0 WHERE token_hash = ?')\n        .bind(tokenHash)\n        .run();\n        \n      return new Response(JSON.stringify({ error: 'Token expired' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Update last used\n    await db\n      .prepare('UPDATE user_sessions SET last_used = CURRENT_TIMESTAMP WHERE token_hash = ?')\n      .bind(tokenHash)\n      .run();\n\n    return new Response(JSON.stringify({ \n      success: true, \n      user: {\n        id: session.user_id,\n        email: session.email,\n        displayName: session.display_name,\n        avatarUrl: session.avatar_url,\n        totalStudyTime: session.total_study_time,\n        totalSessions: session.total_sessions,\n        currentStreak: session.current_streak,\n        longestStreak: session.longest_streak,\n        level: session.level || 1,\n        totalXp: session.total_xp || 0\n      }\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Token verification error:', error);\n    return new Response(JSON.stringify({ error: 'Verification failed' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function logoutUser(db: D1Database, token: string) {\n  if (!token) {\n    return new Response(JSON.stringify({ error: 'Token required' }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  try {\n    const tokenHash = await hashPassword(token);\n    \n    await db\n      .prepare('UPDATE user_sessions SET is_active = 0 WHERE token_hash = ?')\n      .bind(tokenHash)\n      .run();\n\n    return new Response(JSON.stringify({ success: true }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Logout error:', error);\n    return new Response(JSON.stringify({ error: 'Logout failed' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function refreshToken(db: D1Database, token: string) {\n  // For now, just verify the token - could implement actual refresh logic\n  return await verifyToken(db, token);\n}\n\nasync function getRegisteredUsers(db: D1Database) {\n  try {\n    const users = await db\n      .prepare(`\n        SELECT id, email, display_name, avatar_url, last_login, \n               total_study_time, total_sessions, current_streak\n        FROM users \n        WHERE is_active = 1 \n        ORDER BY display_name\n      `)\n      .all();\n\n    const publicUsers = users.results?.map((user: any) => ({\n      id: user.id,\n      email: user.email,\n      displayName: user.display_name,\n      avatarUrl: user.avatar_url,\n      lastLogin: user.last_login,\n      totalStudyTime: user.total_study_time || 0,\n      totalSessions: user.total_sessions || 0,\n      currentStreak: user.current_streak || 0\n    })) || [];\n\n    return new Response(JSON.stringify({ \n      success: true, \n      users: publicUsers\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Get users error:', error);\n    return new Response(JSON.stringify({ error: 'Failed to get users' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function switchUser(db: D1Database, email: string, password: string, request: Request) {\n  // This is essentially the same as login, but for user switching context\n  return await loginUser(db, email, password, request);\n}\n\n// Utility functions\nfunction generateId(): string {\n  return 'user_' + Date.now() + '_' + Math.random().toString(36).slice(2);\n}\n\nfunction generateToken(): string {\n  return 'token_' + Date.now() + '_' + Math.random().toString(36).slice(2) + \n         '_' + Math.random().toString(36).slice(2);\n}\n\nasync function hashPassword(password: string): Promise<string> {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(password);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\nasync function verifyPassword(password: string, hash: string): Promise<boolean> {\n  const computedHash = await hashPassword(password);\n  return computedHash === hash;\n}", "// Cloudflare Pages Functions for Data Operations\nimport { Env } from '../types';\n\n// Main data endpoint for CRUD operations\nexport const onRequestPost: PagesFunction<Env> = async (context) => {\n  const { request, env } = context;\n  \n  try {\n    const body = await request.json() as {\n      action: string;\n      token: string;\n      data?: any;\n      id?: string;\n    };\n    \n    const { action, token, data, id } = body;\n    \n    if (!token) {\n      // For certain read operations, return empty data instead of error\n      if (action === 'loadAppData') {\n        return new Response(JSON.stringify({ \n          success: true, \n          data: null // This will trigger localStorage loading\n        }), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      return new Response(JSON.stringify({ error: 'Authentication token required' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const db = env.DB;\n    \n    // Verify token and get user ID\n    const userId = await verifyTokenAndGetUserId(db, token);\n    if (!userId) {\n      // For read operations, return empty data instead of error\n      if (action === 'loadAppData') {\n        return new Response(JSON.stringify({ \n          success: true, \n          data: null // This will trigger localStorage loading\n        }), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      return new Response(JSON.stringify({ error: 'Invalid or expired token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n    \n    switch (action) {\n      case 'loadAppData':\n        return await loadAppData(db, userId);\n        \n      case 'saveAppData':\n        return await saveAppData(db, userId, data);\n        \n      case 'addSession':\n        return await addSession(db, userId, data);\n        \n      case 'updateSubject':\n        return await updateSubject(db, userId, id!, data);\n        \n      case 'addGoal':\n        return await addGoal(db, userId, data);\n        \n      case 'updateGoal':\n        return await updateGoal(db, userId, id!, data);\n        \n      case 'deleteGoal':\n        return await deleteGoal(db, userId, id!);\n        \n      case 'setPipCount':\n        return await setPipCount(db, userId, data);\n        \n      case 'migrateFromLocalStorage':\n        return await migrateFromLocalStorage(db, userId, data);\n        \n      case 'testMigration':\n        return await testMigration(db, userId, data);\n        \n      case 'ensureUser':\n        return await ensureUserExists(db, userId);\n        \n      case 'diagnostics':\n        return await runDiagnostics(db, token, userId);\n        \n      case 'stepByStepMigration':\n        return await stepByStepMigration(db, userId, data);\n        \n      default:\n        return new Response(JSON.stringify({ error: 'Invalid action' }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n    }\n    \n  } catch (error) {\n    console.error('Data operation error:', error);\n    return new Response(JSON.stringify({ error: 'Internal server error' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n};\n\nasync function loadAppData(db: D1Database, userId: string) {\n  try {\n    // Load all user data\n    const [subjects, subjectConfigs, sessions, goals, pips, preferences] = await Promise.all([\n      db.prepare('SELECT * FROM subjects WHERE user_id = ?').bind(userId).all(),\n      db.prepare('SELECT * FROM subject_configs WHERE user_id = ?').bind(userId).all(),\n      db.prepare('SELECT * FROM sessions WHERE user_id = ? ORDER BY date DESC').bind(userId).all(),\n      db.prepare('SELECT * FROM goals WHERE user_id = ?').bind(userId).all(),\n      db.prepare('SELECT * FROM pips WHERE user_id = ?').bind(userId).all(),\n      db.prepare('SELECT preferences FROM users WHERE id = ?').bind(userId).first()\n    ]);\n\n    // Transform data to match frontend structure\n    const subjectsData: Record<string, any> = {};\n    \n    subjectConfigs.results?.forEach((config: any) => {\n      const subjectData = subjects.results?.find((s: any) => s.id === config.id);\n      \n      subjectsData[config.id] = {\n        config: {\n          id: config.id,\n          name: config.name,\n          emoji: config.emoji,\n          color: config.color,\n          achievements: JSON.parse(config.achievements),\n          questTypes: JSON.parse(config.quest_types),\n          pipAmount: config.pip_amount,\n          targetHours: config.target_hours,\n          resources: JSON.parse(config.resources),\n          customFields: JSON.parse(config.custom_fields || '{}')\n        },\n        totalMinutes: subjectData?.total_minutes || 0,\n        currentStreak: subjectData?.current_streak || 0,\n        longestStreak: subjectData?.longest_streak || 0,\n        achievementLevel: subjectData?.achievement_level || 0,\n        lastStudyDate: subjectData?.last_study_date || null,\n        totalXP: subjectData?.total_xp || 0\n      };\n    });\n\n    // Transform pips data\n    const pipsData: Record<string, Record<string, number>> = {};\n    pips.results?.forEach((pip: any) => {\n      if (!pipsData[pip.date]) {\n        pipsData[pip.date] = {};\n      }\n      pipsData[pip.date][pip.subject_id] = pip.count;\n    });\n\n    // If no subjects exist for this user, initialize with defaults\n    if (Object.keys(subjectsData).length === 0) {\n      await initializeDefaultSubjects(db, userId);\n      // Reload subjects after initialization\n      const [newSubjects, newSubjectConfigs] = await Promise.all([\n        db.prepare('SELECT * FROM subjects WHERE user_id = ?').bind(userId).all(),\n        db.prepare('SELECT * FROM subject_configs WHERE user_id = ?').bind(userId).all()\n      ]);\n      \n      newSubjectConfigs.results?.forEach((config: any) => {\n        const subjectData = newSubjects.results?.find((s: any) => s.id === config.id);\n        \n        subjectsData[config.id] = {\n          config: {\n            id: config.id,\n            name: config.name,\n            emoji: config.emoji,\n            color: config.color,\n            achievements: JSON.parse(config.achievements),\n            questTypes: JSON.parse(config.quest_types),\n            pipAmount: config.pip_amount,\n            targetHours: config.target_hours,\n            resources: JSON.parse(config.resources),\n            customFields: JSON.parse(config.custom_fields || '{}')\n          },\n          totalMinutes: subjectData?.total_minutes || 0,\n          currentStreak: subjectData?.current_streak || 0,\n          longestStreak: subjectData?.longest_streak || 0,\n          achievementLevel: subjectData?.achievement_level || 0,\n          lastStudyDate: subjectData?.last_study_date || null,\n          totalXP: subjectData?.total_xp || 0\n        };\n      });\n    }\n\n    const appData = {\n      subjects: subjectsData,\n      sessions: sessions.results || [],\n      goals: goals.results || [],\n      pips: pipsData,\n      preferences: JSON.parse(preferences?.preferences || '{\"dark\": false}'),\n      version: '4.0.0'\n    };\n\n    return new Response(JSON.stringify({ success: true, data: appData }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Load app data error:', error);\n    return new Response(JSON.stringify({ error: 'Failed to load data' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function saveAppData(db: D1Database, userId: string, appData: any) {\n  try {\n    console.log('saveAppData - appData structure:', {\n      hasPreferences: !!appData.preferences,\n      hasSubjects: !!appData.subjects,\n      subjectsType: typeof appData.subjects,\n      subjectsKeys: appData.subjects ? Object.keys(appData.subjects) : null\n    });\n\n    // Start a transaction by batching operations\n    const operations = [];\n\n    // Save preferences (with default if missing)\n    const preferences = appData.preferences || { dark: false };\n    operations.push(\n      db.prepare('UPDATE users SET preferences = ? WHERE id = ?')\n        .bind(JSON.stringify(preferences), userId)\n    );\n\n    // Save subjects (with null safety)\n    if (appData.subjects && typeof appData.subjects === 'object') {\n      for (const [subjectId, subject] of Object.entries(appData.subjects as Record<string, any>)) {\n        console.log('Processing subject:', subjectId, 'structure:', Object.keys(subject || {}));\n        \n        // Handle different subject data structures\n        let config, subjectData;\n        if (subject && typeof subject === 'object') {\n          if (subject.config) {\n            // New structure with separate config\n            config = subject.config;\n            subjectData = { ...subject };\n            delete subjectData.config;\n          } else {\n            // Older structure where subject IS the config\n            config = subject;\n            subjectData = {\n              totalMinutes: subject.totalMinutes || 0,\n              currentStreak: subject.currentStreak || 0,\n              longestStreak: subject.longestStreak || 0,\n              achievementLevel: subject.achievementLevel || 0,\n              lastStudyDate: subject.lastStudyDate || null,\n              totalXP: subject.totalXP || 0\n            };\n          }\n        } else {\n          console.warn('Invalid subject data for:', subjectId);\n          continue;\n        }\n        \n        // Ensure config has required fields with defaults\n        const safeConfig = {\n          id: config.id || subjectId,\n          name: config.name || 'Unknown Subject',\n          emoji: config.emoji || '\uD83D\uDCDA',\n          color: config.color || '#3B82F6',\n          pipAmount: config.pipAmount || 5,\n          targetHours: config.targetHours || 8,\n          achievements: config.achievements || [],\n          questTypes: config.questTypes || ['study'],\n          resources: config.resources || [],\n          customFields: config.customFields || {}\n        };\n      \n        // Upsert subject config with safe values\n        operations.push(\n          db.prepare(`\n            INSERT OR REPLACE INTO subject_configs \n            (id, user_id, name, emoji, color, pip_amount, target_hours, achievements, quest_types, resources, custom_fields, updated_at)\n            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)\n          `).bind(\n            safeConfig.id, userId, safeConfig.name, safeConfig.emoji, safeConfig.color,\n            safeConfig.pipAmount, safeConfig.targetHours,\n            JSON.stringify(safeConfig.achievements),\n            JSON.stringify(safeConfig.questTypes),\n            JSON.stringify(safeConfig.resources),\n            JSON.stringify(safeConfig.customFields)\n          )\n        );\n        \n        // Upsert subject data with safe values\n        operations.push(\n          db.prepare(`\n            INSERT OR REPLACE INTO subjects \n            (id, user_id, total_minutes, current_streak, longest_streak, achievement_level, last_study_date, total_xp, updated_at)\n            VALUES (?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)\n          `).bind(\n            subjectId, userId, \n            subjectData.totalMinutes || 0, \n            subjectData.currentStreak || 0,\n            subjectData.longestStreak || 0, \n            subjectData.achievementLevel || 0,\n            subjectData.lastStudyDate, \n            subjectData.totalXP || 0\n          )\n        );\n      }\n    }\n\n    // Execute all operations\n    await db.batch(operations);\n\n    return new Response(JSON.stringify({ success: true }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Save app data error:', error);\n    return new Response(JSON.stringify({ error: 'Failed to save data' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function addSession(db: D1Database, userId: string, session: any) {\n  try {\n    await db.prepare(`\n      INSERT INTO sessions (id, user_id, subject_id, duration, date, notes, quest_type, xp_earned)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n    `).bind(\n      session.id, userId, session.subjectId, session.duration,\n      session.date, session.notes, session.questType, session.xpEarned || 0\n    ).run();\n\n    return new Response(JSON.stringify({ success: true }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Add session error:', error);\n    return new Response(JSON.stringify({ error: 'Failed to add session' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function updateSubject(db: D1Database, userId: string, subjectId: string, updates: any) {\n  try {\n    const setParts = Object.keys(updates).map(key => {\n      const dbKey = key.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\n      return `${dbKey} = ?`;\n    });\n    \n    const query = `UPDATE subjects SET ${setParts.join(', ')}, updated_at = CURRENT_TIMESTAMP WHERE id = ? AND user_id = ?`;\n    const values = [...Object.values(updates), subjectId, userId];\n    \n    await db.prepare(query).bind(...values).run();\n\n    return new Response(JSON.stringify({ success: true }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Update subject error:', error);\n    return new Response(JSON.stringify({ error: 'Failed to update subject' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function addGoal(db: D1Database, userId: string, goal: any) {\n  try {\n    await db.prepare(`\n      INSERT INTO goals (id, user_id, title, subject_id, type, target, start_date, due_date, priority, done)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `).bind(\n      goal.id, userId, goal.title, goal.subjectId, goal.type,\n      goal.target, goal.startDate, goal.dueDate, goal.priority, goal.done ? 1 : 0\n    ).run();\n\n    return new Response(JSON.stringify({ success: true }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Add goal error:', error);\n    return new Response(JSON.stringify({ error: 'Failed to add goal' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function updateGoal(db: D1Database, userId: string, goalId: string, updates: any) {\n  try {\n    const setParts = Object.keys(updates).map(key => {\n      const dbKey = key.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\n      return `${dbKey} = ?`;\n    });\n    \n    const values = Object.values(updates).map(value => \n      typeof value === 'boolean' ? (value ? 1 : 0) : value\n    );\n    \n    const query = `UPDATE goals SET ${setParts.join(', ')}, updated_at = CURRENT_TIMESTAMP WHERE id = ? AND user_id = ?`;\n    \n    await db.prepare(query).bind(...values, goalId, userId).run();\n\n    return new Response(JSON.stringify({ success: true }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Update goal error:', error);\n    return new Response(JSON.stringify({ error: 'Failed to update goal' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function deleteGoal(db: D1Database, userId: string, goalId: string) {\n  try {\n    await db.prepare('DELETE FROM goals WHERE id = ? AND user_id = ?')\n      .bind(goalId, userId).run();\n\n    return new Response(JSON.stringify({ success: true }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Delete goal error:', error);\n    return new Response(JSON.stringify({ error: 'Failed to delete goal' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function setPipCount(db: D1Database, userId: string, pipData: { subjectId: string, date: string, count: number }) {\n  try {\n    await db.prepare(`\n      INSERT OR REPLACE INTO pips (user_id, date, subject_id, count, updated_at)\n      VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)\n    `).bind(userId, pipData.date, pipData.subjectId, pipData.count).run();\n\n    return new Response(JSON.stringify({ success: true }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Set pip count error:', error);\n    return new Response(JSON.stringify({ error: 'Failed to set pip count' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function migrateFromLocalStorage(db: D1Database, userId: string, localStorageData: any) {\n  try {\n    // This is a one-time migration function\n    const { appData, userTemplates = [] } = localStorageData;\n    \n    if (!appData) {\n      throw new Error('No app data provided for migration');\n    }\n\n    console.log('Starting migration for user:', userId);\n    \n    // Check if user exists in database\n    let userExists = await db.prepare('SELECT id, email, display_name FROM users WHERE id = ?').bind(userId).first();\n    if (!userExists) {\n      console.log('User does not exist in database, attempting to create from token...');\n      \n      // Try to get user info from token to create the user\n      try {\n        const tokenInfo = await db\n          .prepare(`\n            SELECT s.user_id, u.email, u.display_name\n            FROM user_sessions s\n            LEFT JOIN users u ON s.user_id = u.id\n            WHERE s.user_id = ? AND s.is_active = 1\n          `)\n          .bind(userId)\n          .first() as any;\n          \n        if (!tokenInfo || !tokenInfo.email) {\n          // Create a minimal user record for migration\n          console.log('Creating minimal user record for migration...');\n          await db\n            .prepare(`\n              INSERT INTO users (id, email, display_name, password_hash, last_active, preferences)\n              VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP, ?)\n            `)\n            .bind(\n              userId, \n              `user-${userId}@temp.local`, // Temporary email\n              'Migrated User', \n              'migrated-user-hash', // Temporary hash\n              JSON.stringify({ dark: false })\n            )\n            .run();\n          \n          // Create user profile\n          await db\n            .prepare(`\n              INSERT INTO user_profiles (user_id, learning_goals, favorite_subjects, study_schedule)\n              VALUES (?, ?, ?, ?)\n            `)\n            .bind(userId, JSON.stringify([]), JSON.stringify([]), JSON.stringify({}))\n            .run();\n            \n          console.log('Created minimal user record for migration');\n          userExists = { id: userId, email: `user-${userId}@temp.local`, display_name: 'Migrated User' };\n        }\n      } catch (createError) {\n        console.error('Failed to create user for migration:', createError);\n        throw new Error(`User ${userId} does not exist in database and could not be created. Please try registering again.`);\n      }\n    }\n    console.log('User confirmed in database:', userExists);\n    \n    console.log('App data keys:', Object.keys(appData));\n    console.log('Sessions count:', appData.sessions?.length || 0);\n    console.log('Goals count:', appData.goals?.length || 0);\n    console.log('Templates count:', userTemplates.length);\n    \n    // First clear existing data for this user\n    await db.batch([\n      db.prepare('DELETE FROM subjects WHERE user_id = ?').bind(userId),\n      db.prepare('DELETE FROM subject_configs WHERE user_id = ?').bind(userId),\n      db.prepare('DELETE FROM sessions WHERE user_id = ?').bind(userId),\n      db.prepare('DELETE FROM goals WHERE user_id = ?').bind(userId),\n      db.prepare('DELETE FROM pips WHERE user_id = ?').bind(userId),\n      db.prepare('DELETE FROM user_templates WHERE user_id = ?').bind(userId)\n    ]);\n    \n    // Migrate app data (subjects and preferences)\n    await saveAppData(db, userId, appData);\n    \n    const batchOps = [];\n    \n    // Migrate sessions (with null safety)\n    if (appData.sessions && Array.isArray(appData.sessions)) {\n      const sessionOps = appData.sessions.map((session: any) => \n        db.prepare(`\n          INSERT INTO sessions (id, user_id, subject_id, duration, date, notes, quest_type, xp_earned)\n          VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n        `).bind(\n          session.id || `session-${Date.now()}-${Math.random().toString(36).slice(2)}`,\n          userId, \n          session.subjectId || '',\n          session.duration || 0,\n          session.date || new Date().toISOString(),\n          session.notes || '',\n          session.questType || 'study',\n          session.xpEarned || 0\n        )\n      );\n      batchOps.push(...sessionOps);\n    }\n    \n    // Migrate goals (with null safety)\n    if (appData.goals && Array.isArray(appData.goals)) {\n      const goalOps = appData.goals.map((goal: any) =>\n        db.prepare(`\n          INSERT INTO goals (id, user_id, title, subject_id, type, target, start_date, due_date, priority, done)\n          VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        `).bind(\n          goal.id || `goal-${Date.now()}-${Math.random().toString(36).slice(2)}`,\n          userId,\n          goal.title || 'Untitled Goal',\n          goal.subjectId || '',\n          goal.type || 'minutes',\n          goal.target || 0,\n          goal.startDate || new Date().toISOString(),\n          goal.dueDate || null,\n          goal.priority || 'medium',\n          goal.done ? 1 : 0\n        )\n      );\n      batchOps.push(...goalOps);\n    }\n    \n    // Migrate pips (with null safety)\n    if (appData.pips && typeof appData.pips === 'object') {\n      for (const [date, subjectPips] of Object.entries(appData.pips as Record<string, any>)) {\n        if (subjectPips && typeof subjectPips === 'object') {\n          for (const [subjectId, count] of Object.entries(subjectPips)) {\n            if (typeof count === 'number' && count > 0) {\n              batchOps.push(\n                db.prepare(`\n                  INSERT INTO pips (user_id, date, subject_id, count)\n                  VALUES (?, ?, ?, ?)\n                `).bind(userId, date, subjectId, count)\n              );\n            }\n          }\n        }\n      }\n    }\n    \n    // Migrate user templates (with null safety)\n    if (userTemplates && Array.isArray(userTemplates)) {\n      const templateOps = userTemplates.map((template: any) =>\n        db.prepare(`\n          INSERT INTO user_templates (id, user_id, name, description, category, author, version, subjects, default_goals)\n          VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n        `).bind(\n          template.id || `template-${Date.now()}-${Math.random().toString(36).slice(2)}`,\n          userId,\n          template.name || 'Untitled Template',\n          template.description || '',\n          template.category || 'custom',\n          template.author || 'User',\n          template.version || '1.0.0',\n          JSON.stringify(template.subjects || []),\n          JSON.stringify(template.defaultGoals || [])\n        )\n      );\n      batchOps.push(...templateOps);\n    }\n    \n    // Execute all migration operations in batches to avoid limits\n    if (batchOps.length > 0) {\n      const batchSize = 25; // D1 batch limit\n      for (let i = 0; i < batchOps.length; i += batchSize) {\n        const batch = batchOps.slice(i, i + batchSize);\n        await db.batch(batch);\n      }\n    }\n\n    console.log('Migration completed successfully');\n    return new Response(JSON.stringify({ success: true, message: 'Migration completed' }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Migration error:', error);\n    console.error('Error details:', {\n      message: error.message,\n      stack: error.stack,\n      localStorageData: localStorageData ? Object.keys(localStorageData) : 'null'\n    });\n    return new Response(JSON.stringify({ \n      error: 'Migration failed',\n      details: error.message \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n// Token verification utility function\nasync function verifyTokenAndGetUserId(db: D1Database, token: string): Promise<string | null> {\n  try {\n    const tokenHash = await hashPassword(token);\n    \n    const session = await db\n      .prepare(`\n        SELECT s.user_id, s.expires_at, u.is_active\n        FROM user_sessions s\n        JOIN users u ON s.user_id = u.id\n        WHERE s.token_hash = ? AND s.is_active = 1 AND u.is_active = 1\n      `)\n      .bind(tokenHash)\n      .first() as any;\n      \n    if (!session) {\n      return null;\n    }\n    \n    // Check if token is expired\n    if (new Date(session.expires_at) < new Date()) {\n      await db\n        .prepare('UPDATE user_sessions SET is_active = 0 WHERE token_hash = ?')\n        .bind(tokenHash)\n        .run();\n      return null;\n    }\n\n    // Update last used timestamp\n    await db\n      .prepare('UPDATE user_sessions SET last_used = CURRENT_TIMESTAMP WHERE token_hash = ?')\n      .bind(tokenHash)\n      .run();\n\n    return session.user_id;\n    \n  } catch (error) {\n    console.error('Token verification error:', error);\n    return null;\n  }\n}\n\nasync function testMigration(db: D1Database, userId: string, localStorageData: any) {\n  try {\n    console.log('Test migration - userId:', userId);\n    console.log('Test migration - localStorageData keys:', localStorageData ? Object.keys(localStorageData) : 'null');\n    \n    // Check if user exists\n    const userExists = await db.prepare('SELECT id, email, display_name FROM users WHERE id = ?').bind(userId).first();\n    console.log('User exists:', !!userExists);\n    if (userExists) {\n      console.log('User details:', userExists);\n    }\n    \n    // Test just the saveAppData function first\n    if (localStorageData?.appData) {\n      console.log('Testing saveAppData...');\n      await saveAppData(db, userId, localStorageData.appData);\n      console.log('saveAppData completed successfully');\n    } else {\n      console.log('No appData found in localStorageData');\n    }\n\n    return new Response(JSON.stringify({ \n      success: true, \n      message: 'Test migration completed',\n      data: {\n        userId,\n        userExists: !!userExists,\n        userDetails: userExists || null,\n        hasAppData: !!localStorageData?.appData,\n        appDataKeys: localStorageData?.appData ? Object.keys(localStorageData.appData) : null\n      }\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Test migration error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Test migration failed',\n      details: error.message,\n      stack: error.stack\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function stepByStepMigration(db: D1Database, userId: string, localStorageData: any) {\n  const steps = {\n    step1_data_validation: false,\n    step2_user_confirmed: false,\n    step3_clear_existing_data: false,\n    step4_save_app_data: false,\n    step5_save_sessions: false,\n    step6_save_goals: false,\n    step7_save_pips: false,\n    step8_save_templates: false,\n    error_at_step: null as string | null,\n    error_details: null as any\n  };\n\n  try {\n    // Step 1: Validate data structure\n    console.log('Step 1: Validating data structure...');\n    const { appData, userTemplates = [] } = localStorageData || {};\n    if (!appData) {\n      throw new Error('No app data provided');\n    }\n    steps.step1_data_validation = true;\n    console.log('\u2713 Data structure valid');\n\n    // Step 2: Confirm user exists\n    console.log('Step 2: Confirming user exists...');\n    const userExists = await db.prepare('SELECT id FROM users WHERE id = ?').bind(userId).first();\n    if (!userExists) {\n      throw new Error('User does not exist');\n    }\n    steps.step2_user_confirmed = true;\n    console.log('\u2713 User confirmed');\n\n    // Step 3: Clear existing data (small batch test)\n    console.log('Step 3: Testing clear operations...');\n    await db.prepare('DELETE FROM sessions WHERE user_id = ?').bind(userId).run();\n    steps.step3_clear_existing_data = true;\n    console.log('\u2713 Clear operations work');\n\n    // Step 4: Test saveAppData\n    console.log('Step 4: Testing saveAppData...');\n    await saveAppData(db, userId, appData);\n    steps.step4_save_app_data = true;\n    console.log('\u2713 saveAppData works');\n\n    // Step 5: Save all sessions\n    console.log('Step 5: Saving all sessions...');\n    const batchOps = [];\n    \n    if (appData.sessions && Array.isArray(appData.sessions)) {\n      const sessionOps = appData.sessions.map((session: any) => \n        db.prepare(`\n          INSERT INTO sessions (id, user_id, subject_id, duration, date, notes, quest_type, xp_earned)\n          VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n        `).bind(\n          session.id || `session-${Date.now()}-${Math.random().toString(36).slice(2)}`,\n          userId,\n          session.subjectId || '',\n          session.duration || 0,\n          session.date || new Date().toISOString(),\n          session.notes || '',\n          session.questType || 'study',\n          session.xpEarned || 0\n        )\n      );\n      batchOps.push(...sessionOps);\n    }\n    steps.step5_save_sessions = true;\n    console.log(`\u2713 Prepared ${batchOps.length} session operations`);\n\n    // Step 6: Save all goals\n    console.log('Step 6: Saving all goals...');\n    if (appData.goals && Array.isArray(appData.goals)) {\n      const goalOps = appData.goals.map((goal: any) =>\n        db.prepare(`\n          INSERT INTO goals (id, user_id, title, subject_id, type, target, start_date, due_date, priority, done)\n          VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        `).bind(\n          goal.id || `goal-${Date.now()}-${Math.random().toString(36).slice(2)}`,\n          userId,\n          goal.title || 'Untitled Goal',\n          goal.subjectId || '',\n          goal.type || 'minutes',\n          goal.target || 0,\n          goal.startDate || new Date().toISOString(),\n          goal.dueDate || null,\n          goal.priority || 'medium',\n          goal.done ? 1 : 0\n        )\n      );\n      batchOps.push(...goalOps);\n    }\n    steps.step6_save_goals = true;\n    console.log(`\u2713 Prepared ${appData.goals?.length || 0} goal operations`);\n\n    // Step 7: Save pips\n    console.log('Step 7: Saving pips...');\n    if (appData.pips && typeof appData.pips === 'object') {\n      for (const [date, subjectPips] of Object.entries(appData.pips as Record<string, any>)) {\n        if (subjectPips && typeof subjectPips === 'object') {\n          for (const [subjectId, count] of Object.entries(subjectPips)) {\n            if (typeof count === 'number' && count > 0) {\n              batchOps.push(\n                db.prepare(`\n                  INSERT INTO pips (user_id, date, subject_id, count)\n                  VALUES (?, ?, ?, ?)\n                `).bind(userId, date, subjectId, count)\n              );\n            }\n          }\n        }\n      }\n    }\n    steps.step7_save_pips = true;\n    console.log('\u2713 Prepared pip operations');\n\n    // Step 8: Save templates\n    console.log('Step 8: Saving templates...');\n    if (userTemplates && Array.isArray(userTemplates)) {\n      const templateOps = userTemplates.map((template: any) =>\n        db.prepare(`\n          INSERT INTO user_templates (id, user_id, name, description, category, author, version, subjects, default_goals)\n          VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n        `).bind(\n          template.id || `template-${Date.now()}-${Math.random().toString(36).slice(2)}`,\n          userId,\n          template.name || 'Untitled Template',\n          template.description || '',\n          template.category || 'custom',\n          template.author || 'User',\n          template.version || '1.0.0',\n          JSON.stringify(template.subjects || []),\n          JSON.stringify(template.defaultGoals || [])\n        )\n      );\n      batchOps.push(...templateOps);\n    }\n    steps.step8_save_templates = true;\n    console.log(`\u2713 Prepared ${userTemplates.length} template operations`);\n\n    // Execute all operations in batches\n    console.log(`Executing ${batchOps.length} total operations in batches...`);\n    if (batchOps.length > 0) {\n      const batchSize = 25;\n      for (let i = 0; i < batchOps.length; i += batchSize) {\n        const batch = batchOps.slice(i, i + batchSize);\n        console.log(`Executing batch ${Math.floor(i/batchSize) + 1}/${Math.ceil(batchOps.length/batchSize)} (${batch.length} ops)`);\n        await db.batch(batch);\n      }\n    }\n    console.log('\u2713 All operations completed successfully');\n\n    return new Response(JSON.stringify({\n      success: true,\n      steps,\n      message: 'Step-by-step migration test completed'\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n\n  } catch (error) {\n    console.error('Step-by-step migration error:', error);\n    \n    // Identify which step failed\n    if (!steps.step1_data_validation) steps.error_at_step = 'data_validation';\n    else if (!steps.step2_user_confirmed) steps.error_at_step = 'user_confirmation';\n    else if (!steps.step3_clear_existing_data) steps.error_at_step = 'clear_existing_data';\n    else if (!steps.step4_save_app_data) steps.error_at_step = 'save_app_data';\n    else if (!steps.step5_save_sessions) steps.error_at_step = 'save_sessions';\n\n    steps.error_details = {\n      message: error.message,\n      stack: error.stack\n    };\n\n    return new Response(JSON.stringify({\n      success: false,\n      steps,\n      error: 'Step-by-step migration failed',\n      failed_at: steps.error_at_step\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function runDiagnostics(db: D1Database, token: string, userId: string) {\n  const results = {\n    step1_token_received: !!token,\n    step2_userId_extracted: !!userId,\n    step3_db_connection: false,\n    step4_user_exists: false,\n    step5_token_verification: false,\n    error_details: null as any,\n    userId_value: userId,\n    token_length: token ? token.length : 0\n  };\n  \n  try {\n    // Step 3: Test database connection\n    console.log('Testing database connection...');\n    const dbTest = await db.prepare('SELECT 1 as test').first();\n    results.step3_db_connection = !!dbTest;\n    console.log('DB connection test:', dbTest);\n    \n    // Step 4: Check if user exists\n    console.log('Checking if user exists...');\n    const userCheck = await db.prepare('SELECT id, email FROM users WHERE id = ?').bind(userId).first();\n    results.step4_user_exists = !!userCheck;\n    console.log('User check result:', userCheck);\n    \n    // Step 5: Test token verification process\n    console.log('Testing token verification...');\n    const tokenHash = await hashPassword(token);\n    const sessionCheck = await db\n      .prepare(`\n        SELECT s.user_id, s.expires_at, u.email\n        FROM user_sessions s\n        JOIN users u ON s.user_id = u.id\n        WHERE s.token_hash = ? AND s.is_active = 1 AND u.is_active = 1\n      `)\n      .bind(tokenHash)\n      .first();\n    results.step5_token_verification = !!sessionCheck;\n    console.log('Token verification result:', sessionCheck);\n    \n    return new Response(JSON.stringify({\n      success: true,\n      diagnostics: results,\n      message: 'Diagnostics completed'\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Diagnostics error:', error);\n    results.error_details = {\n      message: error.message,\n      stack: error.stack\n    };\n    \n    return new Response(JSON.stringify({\n      success: false,\n      diagnostics: results,\n      error: 'Diagnostics failed'\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function ensureUserExists(db: D1Database, userId: string) {\n  try {\n    // Check if user exists\n    const userExists = await db.prepare('SELECT id, email, display_name FROM users WHERE id = ?').bind(userId).first();\n    \n    if (userExists) {\n      return new Response(JSON.stringify({ \n        success: true, \n        message: 'User already exists',\n        user: userExists\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n    \n    // Create minimal user record\n    console.log('Creating user record for:', userId);\n    await db\n      .prepare(`\n        INSERT INTO users (id, email, display_name, password_hash, last_active, preferences)\n        VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP, ?)\n      `)\n      .bind(\n        userId, \n        `user-${userId}@temp.local`,\n        'User', \n        'temp-hash',\n        JSON.stringify({ dark: false })\n      )\n      .run();\n    \n    // Create user profile\n    await db\n      .prepare(`\n        INSERT INTO user_profiles (user_id, learning_goals, favorite_subjects, study_schedule)\n        VALUES (?, ?, ?, ?)\n      `)\n      .bind(userId, JSON.stringify([]), JSON.stringify([]), JSON.stringify({}))\n      .run();\n\n    const newUser = { id: userId, email: `user-${userId}@temp.local`, display_name: 'User' };\n    \n    return new Response(JSON.stringify({ \n      success: true, \n      message: 'User created successfully',\n      user: newUser\n    }), {\n      status: 201,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Ensure user exists error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Failed to ensure user exists',\n      details: error.message \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function hashPassword(password: string): Promise<string> {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(password);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\n// Initialize default subjects for new users\nasync function initializeDefaultSubjects(db: D1Database, userId: string) {\n  const defaultSubjects = [\n    {\n      id: 'japanese',\n      name: 'Japanese',\n      emoji: '\uD83C\uDDEF\uD83C\uDDF5',\n      color: '#E53E3E',\n      pipAmount: 15,\n      targetHours: 1,\n      questTypes: [\n        { id: 'easy', name: 'Easy', duration: 15, xp: 10, emoji: '\uD83C\uDF1F' },\n        { id: 'medium', name: 'Medium', duration: 30, xp: 25, emoji: '\u26A1' },\n        { id: 'hard', name: 'Hard', duration: 60, xp: 50, emoji: '\uD83C\uDFC6' }\n      ],\n      achievements: [\n        { id: 'first_step', name: 'First Step', emoji: '\uD83C\uDF1F', streakRequired: 0 },\n        { id: 'on_fire', name: 'On Fire', emoji: '\uD83D\uDD25', streakRequired: 3 },\n        { id: 'power_user', name: 'Power User', emoji: '\u26A1', streakRequired: 7 },\n        { id: 'champion', name: 'Champion', emoji: '\uD83C\uDFC6', streakRequired: 14 },\n        { id: 'master', name: 'Master', emoji: '\uD83D\uDC8E', streakRequired: 30 },\n        { id: 'legend', name: 'Legend', emoji: '\uD83D\uDC51', streakRequired: 60 }\n      ],\n      resources: [\n        { id: '1', title: 'Tae Kim \u2014 Complete Grammar Guide', url: 'https://www.guidetojapanese.org/learn/grammar', priority: 'H' },\n        { id: '2', title: 'NHK Easy News \u2014 Real Japanese', url: 'https://www3.nhk.or.jp/news/easy/', priority: 'H' },\n        { id: '3', title: 'Jisho \u2014 Ultimate Dictionary', url: 'https://jisho.org/', priority: 'H' },\n        { id: '4', title: 'Anki \u2014 SRS Flashcards', url: 'https://apps.ankiweb.net/', priority: 'H' }\n      ]\n    },\n    {\n      id: 'programming',\n      name: 'Programming',\n      emoji: '\uD83D\uDCBB',\n      color: '#38A169',\n      pipAmount: 20,\n      targetHours: 1.5,\n      questTypes: [\n        { id: 'easy', name: 'Easy', duration: 15, xp: 10, emoji: '\uD83C\uDF1F' },\n        { id: 'medium', name: 'Medium', duration: 30, xp: 25, emoji: '\u26A1' },\n        { id: 'hard', name: 'Hard', duration: 60, xp: 50, emoji: '\uD83C\uDFC6' }\n      ],\n      achievements: [\n        { id: 'first_step', name: 'First Step', emoji: '\uD83C\uDF1F', streakRequired: 0 },\n        { id: 'on_fire', name: 'On Fire', emoji: '\uD83D\uDD25', streakRequired: 3 },\n        { id: 'power_user', name: 'Power User', emoji: '\u26A1', streakRequired: 7 },\n        { id: 'champion', name: 'Champion', emoji: '\uD83C\uDFC6', streakRequired: 14 },\n        { id: 'master', name: 'Master', emoji: '\uD83D\uDC8E', streakRequired: 30 },\n        { id: 'legend', name: 'Legend', emoji: '\uD83D\uDC51', streakRequired: 60 }\n      ],\n      resources: [\n        { id: '1', title: 'MDN Web Docs', url: 'https://developer.mozilla.org/', priority: 'H' },\n        { id: '2', title: 'JavaScript.info', url: 'https://javascript.info/', priority: 'H' },\n        { id: '3', title: 'FreeCodeCamp', url: 'https://www.freecodecamp.org/', priority: 'H' },\n        { id: '4', title: 'Stack Overflow', url: 'https://stackoverflow.com/', priority: 'M' }\n      ]\n    },\n    {\n      id: 'math',\n      name: 'Mathematics',\n      emoji: '\uD83E\uDDEE',\n      color: '#3182CE',\n      pipAmount: 25,\n      targetHours: 1,\n      questTypes: [\n        { id: 'easy', name: 'Easy', duration: 15, xp: 10, emoji: '\uD83C\uDF1F' },\n        { id: 'medium', name: 'Medium', duration: 30, xp: 25, emoji: '\u26A1' },\n        { id: 'hard', name: 'Hard', duration: 60, xp: 50, emoji: '\uD83C\uDFC6' }\n      ],\n      achievements: [\n        { id: 'first_step', name: 'First Step', emoji: '\uD83C\uDF1F', streakRequired: 0 },\n        { id: 'on_fire', name: 'On Fire', emoji: '\uD83D\uDD25', streakRequired: 3 },\n        { id: 'power_user', name: 'Power User', emoji: '\u26A1', streakRequired: 7 },\n        { id: 'champion', name: 'Champion', emoji: '\uD83C\uDFC6', streakRequired: 14 },\n        { id: 'master', name: 'Master', emoji: '\uD83D\uDC8E', streakRequired: 30 },\n        { id: 'legend', name: 'Legend', emoji: '\uD83D\uDC51', streakRequired: 60 }\n      ],\n      resources: [\n        { id: '1', title: 'Khan Academy', url: 'https://www.khanacademy.org/', priority: 'H' },\n        { id: '2', title: 'Wolfram Alpha', url: 'https://www.wolframalpha.com/', priority: 'H' },\n        { id: '3', title: 'Desmos Calculator', url: 'https://www.desmos.com/', priority: 'M' },\n        { id: '4', title: 'PatrickJMT', url: 'https://patrickjmt.com/', priority: 'M' }\n      ]\n    }\n  ];\n\n  // Insert default subjects and configs\n  for (const subject of defaultSubjects) {\n    // Insert subject config\n    await db.prepare(`\n      INSERT OR IGNORE INTO subject_configs \n      (id, user_id, name, emoji, color, achievements, quest_types, pip_amount, target_hours, resources, custom_fields, created_at, updated_at)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)\n    `).bind(\n      subject.id,\n      userId,\n      subject.name,\n      subject.emoji,\n      subject.color,\n      JSON.stringify(subject.achievements),\n      JSON.stringify(subject.questTypes),\n      subject.pipAmount,\n      subject.targetHours,\n      JSON.stringify(subject.resources),\n      JSON.stringify({})\n    ).run();\n\n    // Insert subject data\n    await db.prepare(`\n      INSERT OR IGNORE INTO subjects \n      (id, user_id, total_minutes, current_streak, longest_streak, achievement_level, last_study_date, total_xp, created_at, updated_at)\n      VALUES (?, ?, 0, 0, 0, 0, NULL, 0, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)\n    `).bind(subject.id, userId).run();\n  }\n\n  console.log(`Initialized ${defaultSubjects.length} default subjects for user ${userId}`);\n}", "// Cloudflare Pages Function for KV Session Management\nimport { Env } from '../types';\n\nexport const onRequestPost: PagesFunction<Env> = async (context) => {\n  const { request, env } = context;\n  \n  try {\n    const body = await request.json() as { \n      action: 'store' | 'get' | 'delete' | 'list',\n      key?: string,\n      data?: any,\n      expirationTtl?: number\n    };\n    \n    const { action, key, data, expirationTtl } = body;\n    const sessions = env.SESSIONS;\n    \n    if (!sessions) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'KV Sessions namespace not available' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    switch (action) {\n      case 'store':\n        if (!key || !data) {\n          return new Response(JSON.stringify({ \n            success: false, \n            error: 'Key and data required for store operation' \n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n\n        try {\n          const options: any = {};\n          if (expirationTtl && expirationTtl > 0) {\n            options.expirationTtl = expirationTtl;\n          }\n\n          await sessions.put(key, JSON.stringify(data), options);\n          \n          return new Response(JSON.stringify({ \n            success: true, \n            message: 'Session stored successfully' \n          }), {\n            headers: { 'Content-Type': 'application/json' }\n          });\n        } catch (error) {\n          console.error('KV store error:', error);\n          return new Response(JSON.stringify({ \n            success: false, \n            error: 'Failed to store session' \n          }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n\n      case 'get':\n        if (!key) {\n          return new Response(JSON.stringify({ \n            success: false, \n            error: 'Key required for get operation' \n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n\n        try {\n          const sessionData = await sessions.get(key);\n          \n          if (!sessionData) {\n            return new Response(JSON.stringify({ \n              success: false, \n              error: 'Session not found' \n            }), {\n              status: 404,\n              headers: { 'Content-Type': 'application/json' }\n            });\n          }\n\n          return new Response(JSON.stringify({ \n            success: true, \n            data: JSON.parse(sessionData) \n          }), {\n            headers: { 'Content-Type': 'application/json' }\n          });\n        } catch (error) {\n          console.error('KV get error:', error);\n          return new Response(JSON.stringify({ \n            success: false, \n            error: 'Failed to retrieve session' \n          }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n\n      case 'delete':\n        if (!key) {\n          return new Response(JSON.stringify({ \n            success: false, \n            error: 'Key required for delete operation' \n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n\n        try {\n          await sessions.delete(key);\n          \n          return new Response(JSON.stringify({ \n            success: true, \n            message: 'Session deleted successfully' \n          }), {\n            headers: { 'Content-Type': 'application/json' }\n          });\n        } catch (error) {\n          console.error('KV delete error:', error);\n          return new Response(JSON.stringify({ \n            success: false, \n            error: 'Failed to delete session' \n          }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n\n      case 'list':\n        try {\n          const keys = await sessions.list({ limit: 100 });\n          \n          return new Response(JSON.stringify({ \n            success: true, \n            keys: keys.keys.map(k => k.name) \n          }), {\n            headers: { 'Content-Type': 'application/json' }\n          });\n        } catch (error) {\n          console.error('KV list error:', error);\n          return new Response(JSON.stringify({ \n            success: false, \n            error: 'Failed to list sessions' \n          }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n\n      default:\n        return new Response(JSON.stringify({ \n          success: false, \n          error: 'Invalid action' \n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n    }\n    \n  } catch (error) {\n    console.error('KV Session API error:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n};", "// Cloudflare Pages Function for User Settings Management\nimport { Env } from '../types';\n\nexport const onRequestPost: PagesFunction<Env> = async (context) => {\n  const { request, env } = context;\n  \n  try {\n    const body = await request.json() as { \n      action: 'load' | 'save' | 'delete',\n      token?: string,\n      settings?: any\n    };\n    \n    const { action, token, settings } = body;\n    const db = env.DB;\n    \n    if (!token) {\n      // For load operations, return default settings instead of error\n      if (action === 'load') {\n        return new Response(JSON.stringify({ \n          success: true, \n          settings: null // This will trigger default settings usage\n        }), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'Authentication token required' \n      }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Verify token and get user ID\n    const userId = await getUserIdFromToken(db, token);\n    if (!userId) {\n      // For load operations, return default settings instead of error\n      if (action === 'load') {\n        return new Response(JSON.stringify({ \n          success: true, \n          settings: null // This will trigger default settings usage\n        }), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n      \n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'Invalid or expired token' \n      }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    switch (action) {\n      case 'load':\n        return await loadUserSettings(db, userId);\n      \n      case 'save':\n        if (!settings) {\n          return new Response(JSON.stringify({ \n            success: false, \n            error: 'Settings data required' \n          }), {\n            status: 400,\n            headers: { 'Content-Type': 'application/json' }\n          });\n        }\n        return await saveUserSettings(db, userId, settings);\n      \n      case 'delete':\n        return await deleteUserSettings(db, userId);\n      \n      default:\n        return new Response(JSON.stringify({ \n          success: false, \n          error: 'Invalid action' \n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n    }\n    \n  } catch (error) {\n    console.error('Settings API error:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n};\n\nasync function getUserIdFromToken(db: D1Database, token: string): Promise<string | null> {\n  try {\n    const tokenHash = await hashPassword(token);\n    \n    const session = await db\n      .prepare(`\n        SELECT s.user_id\n        FROM user_sessions s\n        JOIN users u ON s.user_id = u.id\n        WHERE s.token_hash = ? AND s.is_active = 1 AND u.is_active = 1 AND s.expires_at > CURRENT_TIMESTAMP\n      `)\n      .bind(tokenHash)\n      .first() as any;\n      \n    return session?.user_id || null;\n  } catch (error) {\n    console.error('Token verification error:', error);\n    return null;\n  }\n}\n\nasync function loadUserSettings(db: D1Database, userId: string) {\n  try {\n    const userSettings = await db\n      .prepare(`\n        SELECT theme_preference, language, daily_goal_minutes, weekly_goal_minutes, \n               study_reminders, reminder_times, break_reminders, achievement_notifications,\n               weekly_reports, auto_save_interval, pip_notification_sound, quest_complete_sound,\n               dashboard_layout, updated_at\n        FROM user_settings \n        WHERE user_id = ?\n      `)\n      .bind(userId)\n      .first() as any;\n      \n    if (!userSettings) {\n      // Return null to indicate no settings found (will use defaults)\n      return new Response(JSON.stringify({ \n        success: true, \n        settings: null \n      }), {\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Parse JSON fields and create settings object matching frontend expectations\n    const settings = {\n      theme: userSettings.theme_preference || 'light',\n      language: userSettings.language || 'en',\n      notifications: {\n        studyReminders: userSettings.study_reminders || true,\n        achievementAlerts: userSettings.achievement_notifications || true,\n        emailDigest: userSettings.weekly_reports || false,\n        reminderTimes: userSettings.reminder_times ? JSON.parse(userSettings.reminder_times) : [\"09:00\", \"14:00\", \"19:00\"],\n        breakReminders: userSettings.break_reminders || true,\n        pipNotificationSound: userSettings.pip_notification_sound || true,\n        questCompleteSound: userSettings.quest_complete_sound || true\n      },\n      dashboard: {\n        layout: userSettings.dashboard_layout || 'grid',\n        showAnimations: true,\n        compactView: false\n      },\n      privacy: {\n        shareProgress: false,\n        publicProfile: false\n      },\n      study: {\n        defaultPomodoroLength: 25,\n        autoStartBreaks: false,\n        soundEffects: true,\n        dailyGoalMinutes: userSettings.daily_goal_minutes || 60,\n        weeklyGoalMinutes: userSettings.weekly_goal_minutes || 420,\n        autoSaveInterval: userSettings.auto_save_interval || 300\n      }\n    };\n\n    return new Response(JSON.stringify({ \n      success: true, \n      settings,\n      lastUpdated: userSettings.updated_at\n    }), {\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Load settings error:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Failed to load settings' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function saveUserSettings(db: D1Database, userId: string, settings: any) {\n  try {\n    // Check if user settings already exist\n    const existing = await db\n      .prepare('SELECT user_id FROM user_settings WHERE user_id = ?')\n      .bind(userId)\n      .first();\n\n    // Map frontend settings to database schema\n    const settingsData = {\n      theme_preference: settings.theme || 'light',\n      language: settings.language || 'en',\n      study_reminders: settings.notifications?.studyReminders ? 1 : 0,\n      reminder_times: JSON.stringify(settings.notifications?.reminderTimes || [\"09:00\", \"14:00\", \"19:00\"]),\n      break_reminders: settings.notifications?.breakReminders ? 1 : 0,\n      achievement_notifications: settings.notifications?.achievementAlerts ? 1 : 0,\n      weekly_reports: settings.notifications?.emailDigest ? 1 : 0,\n      auto_save_interval: settings.study?.autoSaveInterval || 300,\n      pip_notification_sound: settings.notifications?.pipNotificationSound ? 1 : 0,\n      quest_complete_sound: settings.notifications?.questCompleteSound ? 1 : 0,\n      daily_goal_minutes: settings.study?.dailyGoalMinutes || 60,\n      weekly_goal_minutes: settings.study?.weeklyGoalMinutes || 420,\n      dashboard_layout: settings.dashboard?.layout || 'grid'\n    };\n\n    if (existing) {\n      // Update existing settings\n      await db\n        .prepare(`\n          UPDATE user_settings \n          SET theme_preference = ?, language = ?, study_reminders = ?, reminder_times = ?, \n              break_reminders = ?, achievement_notifications = ?, weekly_reports = ?,\n              auto_save_interval = ?, pip_notification_sound = ?, quest_complete_sound = ?,\n              daily_goal_minutes = ?, weekly_goal_minutes = ?, dashboard_layout = ?, \n              updated_at = CURRENT_TIMESTAMP\n          WHERE user_id = ?\n        `)\n        .bind(\n          settingsData.theme_preference,\n          settingsData.language,\n          settingsData.study_reminders,\n          settingsData.reminder_times,\n          settingsData.break_reminders,\n          settingsData.achievement_notifications,\n          settingsData.weekly_reports,\n          settingsData.auto_save_interval,\n          settingsData.pip_notification_sound,\n          settingsData.quest_complete_sound,\n          settingsData.daily_goal_minutes,\n          settingsData.weekly_goal_minutes,\n          settingsData.dashboard_layout,\n          userId\n        )\n        .run();\n    } else {\n      // Insert new settings\n      await db\n        .prepare(`\n          INSERT INTO user_settings (\n            user_id, theme_preference, language, study_reminders, reminder_times, \n            break_reminders, achievement_notifications, weekly_reports, auto_save_interval, \n            pip_notification_sound, quest_complete_sound, daily_goal_minutes, \n            weekly_goal_minutes, dashboard_layout\n          )\n          VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        `)\n        .bind(\n          userId,\n          settingsData.theme_preference,\n          settingsData.language,\n          settingsData.study_reminders,\n          settingsData.reminder_times,\n          settingsData.break_reminders,\n          settingsData.achievement_notifications,\n          settingsData.weekly_reports,\n          settingsData.auto_save_interval,\n          settingsData.pip_notification_sound,\n          settingsData.quest_complete_sound,\n          settingsData.daily_goal_minutes,\n          settingsData.weekly_goal_minutes,\n          settingsData.dashboard_layout\n        )\n        .run();\n    }\n\n    return new Response(JSON.stringify({ \n      success: true, \n      message: 'Settings saved successfully' \n    }), {\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Save settings error:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Failed to save settings' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function deleteUserSettings(db: D1Database, userId: string) {\n  try {\n    await db\n      .prepare('DELETE FROM user_settings WHERE user_id = ?')\n      .bind(userId)\n      .run();\n\n    return new Response(JSON.stringify({ \n      success: true, \n      message: 'Settings deleted successfully' \n    }), {\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Delete settings error:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Failed to delete settings' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n// Utility function for password hashing (same as auth.ts)\nasync function hashPassword(password: string): Promise<string> {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(password);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n}", "// Cloudflare Pages Functions for Template Operations\nimport { Env } from '../types';\n\nexport const onRequestPost: PagesFunction<Env> = async (context) => {\n  const { request, env } = context;\n  \n  try {\n    const body = await request.json() as {\n      action: string;\n      token: string;\n      template?: any;\n      templateId?: string;\n    };\n    \n    const { action, token, template, templateId } = body;\n    \n    if (!token) {\n      return new Response(JSON.stringify({ error: 'Authentication token required' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const db = env.DB;\n    \n    // Verify token and get user ID\n    const userId = await verifyTokenAndGetUserId(db, token);\n    if (!userId) {\n      return new Response(JSON.stringify({ error: 'Invalid or expired token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n    \n    switch (action) {\n      case 'loadUserTemplates':\n        return await loadUserTemplates(db, userId);\n        \n      case 'saveUserTemplate':\n        return await saveUserTemplate(db, userId, template);\n        \n      case 'deleteUserTemplate':\n        return await deleteUserTemplate(db, userId, templateId!);\n        \n      default:\n        return new Response(JSON.stringify({ error: 'Invalid action' }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n    }\n    \n  } catch (error) {\n    console.error('Template operation error:', error);\n    return new Response(JSON.stringify({ error: 'Internal server error' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n};\n\nasync function loadUserTemplates(db: D1Database, userId: string) {\n  try {\n    const result = await db\n      .prepare('SELECT * FROM user_templates WHERE user_id = ? ORDER BY created_at DESC')\n      .bind(userId)\n      .all();\n\n    const templates = result.results?.map((template: any) => ({\n      id: template.id,\n      name: template.name,\n      description: template.description,\n      category: template.category,\n      author: template.author,\n      version: template.version,\n      subjects: JSON.parse(template.subjects),\n      defaultGoals: JSON.parse(template.default_goals)\n    })) || [];\n\n    return new Response(JSON.stringify({ success: true, templates }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Load user templates error:', error);\n    return new Response(JSON.stringify({ error: 'Failed to load templates' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function saveUserTemplate(db: D1Database, userId: string, template: any) {\n  try {\n    await db.prepare(`\n      INSERT OR REPLACE INTO user_templates \n      (id, user_id, name, description, category, author, version, subjects, default_goals, updated_at)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP)\n    `).bind(\n      template.id, userId, template.name, template.description,\n      template.category, template.author, template.version,\n      JSON.stringify(template.subjects),\n      JSON.stringify(template.defaultGoals || [])\n    ).run();\n\n    return new Response(JSON.stringify({ success: true }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Save user template error:', error);\n    return new Response(JSON.stringify({ error: 'Failed to save template' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nasync function deleteUserTemplate(db: D1Database, userId: string, templateId: string) {\n  try {\n    await db.prepare('DELETE FROM user_templates WHERE id = ? AND user_id = ?')\n      .bind(templateId, userId)\n      .run();\n\n    return new Response(JSON.stringify({ success: true }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n    \n  } catch (error) {\n    console.error('Delete user template error:', error);\n    return new Response(JSON.stringify({ error: 'Failed to delete template' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n// Token verification utility function\nasync function verifyTokenAndGetUserId(db: D1Database, token: string): Promise<string | null> {\n  try {\n    const tokenHash = await hashPassword(token);\n    \n    const session = await db\n      .prepare(`\n        SELECT s.user_id, s.expires_at, u.is_active\n        FROM user_sessions s\n        JOIN users u ON s.user_id = u.id\n        WHERE s.token_hash = ? AND s.is_active = 1 AND u.is_active = 1\n      `)\n      .bind(tokenHash)\n      .first() as any;\n      \n    if (!session) {\n      return null;\n    }\n    \n    // Check if token is expired\n    if (new Date(session.expires_at) < new Date()) {\n      await db\n        .prepare('UPDATE user_sessions SET is_active = 0 WHERE token_hash = ?')\n        .bind(tokenHash)\n        .run();\n      return null;\n    }\n\n    // Update last used timestamp\n    await db\n      .prepare('UPDATE user_sessions SET last_used = CURRENT_TIMESTAMP WHERE token_hash = ?')\n      .bind(tokenHash)\n      .run();\n\n    return session.user_id;\n    \n  } catch (error) {\n    console.error('Token verification error:', error);\n    return null;\n  }\n}\n\nasync function hashPassword(password: string): Promise<string> {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(password);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n}", "// Enhanced Cloudflare Pages Functions Middleware\nimport { Env } from './types';\n\nexport const onRequest: PagesFunction<Env> = async (context) => {\n  const { request, env } = context;\n  const url = new URL(request.url);\n  const clientIP = request.headers.get('CF-Connecting-IP') || \n                   request.headers.get('X-Forwarded-For') || \n                   'unknown';\n  \n  // Security headers for all requests\n  const securityHeaders = {\n    'X-Content-Type-Options': 'nosniff',\n    'X-Frame-Options': 'DENY',\n    'X-XSS-Protection': '1; mode=block',\n    'Referrer-Policy': 'strict-origin-when-cross-origin',\n    'Permissions-Policy': 'camera=(), microphone=(), geolocation=()',\n  };\n  \n  // API route handling\n  if (url.pathname.startsWith('/api/')) {\n    // Rate limiting for API routes\n    const rateLimitKey = `rate_limit:${clientIP}`;\n    const rateLimitWindow = parseInt(env.RATE_LIMIT_WINDOW);\n    const rateLimitRequests = parseInt(env.RATE_LIMIT_REQUESTS);\n    \n    try {\n      const currentCount = await env.RATE_LIMIT.get(rateLimitKey);\n      const count = currentCount ? parseInt(currentCount) : 0;\n      \n      if (count >= rateLimitRequests) {\n        return new Response(JSON.stringify({ \n          error: 'Rate limit exceeded',\n          resetTime: Date.now() + (rateLimitWindow * 1000)\n        }), {\n          status: 429,\n          headers: {\n            'Content-Type': 'application/json',\n            'Retry-After': rateLimitWindow.toString(),\n            ...securityHeaders\n          }\n        });\n      }\n      \n      // Increment rate limit counter\n      await env.RATE_LIMIT.put(rateLimitKey, (count + 1).toString(), {\n        expirationTtl: rateLimitWindow\n      });\n      \n    } catch (error) {\n      console.error('Rate limiting error:', error);\n      // Continue on rate limiting errors to avoid blocking legitimate requests\n    }\n    \n    // Process the API request\n    const response = await context.next();\n    \n    // Clone response to modify headers\n    const newResponse = new Response(response.body, response);\n    \n    // CORS headers\n    newResponse.headers.set('Access-Control-Allow-Origin', '*');\n    newResponse.headers.set('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\n    newResponse.headers.set('Access-Control-Allow-Headers', 'Content-Type, Authorization, X-Requested-With');\n    newResponse.headers.set('Access-Control-Max-Age', '86400'); // 24 hours\n    \n    // Add security headers\n    Object.entries(securityHeaders).forEach(([key, value]) => {\n      newResponse.headers.set(key, value);\n    });\n    \n    // Add rate limit headers\n    const currentCount = await env.RATE_LIMIT.get(rateLimitKey);\n    const count = currentCount ? parseInt(currentCount) : 0;\n    newResponse.headers.set('X-RateLimit-Limit', rateLimitRequests.toString());\n    newResponse.headers.set('X-RateLimit-Remaining', Math.max(0, rateLimitRequests - count).toString());\n    newResponse.headers.set('X-RateLimit-Reset', (Date.now() + (rateLimitWindow * 1000)).toString());\n    \n    return newResponse;\n  }\n  \n  // Static file caching for production\n  if (env.NODE_ENV === 'production' && (\n    url.pathname.endsWith('.js') ||\n    url.pathname.endsWith('.css') ||\n    url.pathname.endsWith('.png') ||\n    url.pathname.endsWith('.jpg') ||\n    url.pathname.endsWith('.svg') ||\n    url.pathname.endsWith('.ico')\n  )) {\n    const response = await context.next();\n    const newResponse = new Response(response.body, response);\n    \n    // Cache static assets for 1 year\n    newResponse.headers.set('Cache-Control', 'public, max-age=31536000, immutable');\n    Object.entries(securityHeaders).forEach(([key, value]) => {\n      newResponse.headers.set(key, value);\n    });\n    \n    return newResponse;\n  }\n  \n  // Default response with security headers\n  const response = await context.next();\n  const newResponse = new Response(response.body, response);\n  \n  Object.entries(securityHeaders).forEach(([key, value]) => {\n    newResponse.headers.set(key, value);\n  });\n  \n  return newResponse;\n};\n\n// Enhanced preflight OPTIONS handler\nexport const onRequestOptions: PagesFunction<Env> = async ({ env }) => {\n  return new Response(null, {\n    status: 204,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Requested-With',\n      'Access-Control-Max-Age': '86400',\n      'X-Content-Type-Options': 'nosniff',\n      'X-Frame-Options': 'DENY',\n    },\n  });\n};\n", "import { onRequestPost as __api_auth_ts_onRequestPost } from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\functions\\\\api\\\\auth.ts\"\nimport { onRequestPost as __api_data_ts_onRequestPost } from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\functions\\\\api\\\\data.ts\"\nimport { onRequestPost as __api_kv_session_ts_onRequestPost } from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\functions\\\\api\\\\kv-session.ts\"\nimport { onRequestPost as __api_settings_ts_onRequestPost } from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\functions\\\\api\\\\settings.ts\"\nimport { onRequestPost as __api_templates_ts_onRequestPost } from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\functions\\\\api\\\\templates.ts\"\nimport { onRequestOptions as ___middleware_ts_onRequestOptions } from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\functions\\\\_middleware.ts\"\nimport { onRequest as ___middleware_ts_onRequest } from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\functions\\\\_middleware.ts\"\n\nexport const routes = [\n    {\n      routePath: \"/api/auth\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_auth_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/data\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_data_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/kv-session\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_kv_session_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/settings\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_settings_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/templates\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_templates_ts_onRequestPost],\n    },\n  {\n      routePath: \"/\",\n      mountPath: \"/\",\n      method: \"OPTIONS\",\n      middlewares: [___middleware_ts_onRequestOptions],\n      modules: [],\n    },\n  {\n      routePath: \"/\",\n      mountPath: \"/\",\n      method: \"\",\n      middlewares: [___middleware_ts_onRequest],\n      modules: [],\n    },\n  ]", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\node_modules\\\\wrangler\\\\templates\\\\pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\node_modules\\\\wrangler\\\\templates\\\\pages-template-worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\.wrangler\\\\tmp\\\\bundle-vTTYLl\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\.wrangler\\\\tmp\\\\bundle-vTTYLl\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\.wrangler\\\\tmp\\\\bundle-vTTYLl\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\.wrangler\\\\tmp\\\\pages-YCQnts\\\\functionsWorker-0.6319389083192735.mjs\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\.wrangler\\\\tmp\\\\pages-YCQnts\\\\functionsWorker-0.6319389083192735.mjs\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\.wrangler\\\\tmp\\\\bundle-YlpBru\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\.wrangler\\\\tmp\\\\bundle-YlpBru\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\corin\\\\Documents\\\\b\\\\app\\\\.wrangler\\\\tmp\\\\bundle-YlpBru\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAAC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAAC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAAI;AACJ,IAAM,WAAW;AAAA,EACf;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EA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",
  "names": ["PerformanceMark", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "hrtime", "dir", "env", "count", "_Process", "cwd", "hrtime", "assert", "Writable", "EventEmitter", "createNotImplementedError", "__name", "notImplemented", "notImplementedClass", "_timeOrigin", "_performanceNow", "nodeTiming", "PerformanceEntry", "PerformanceMark", "PerformanceMeasure", "PerformanceResourceTiming", "PerformanceObserverEntryList", "Performance", "PerformanceObserver", "performance", "noop_default", "_console", "_ignoreErrors", "_stderr", "Writable", "_stdout", "log", "info", "trace", "debug", "table", "error", "warn", "createTask", "clear", "count", "countReset", "dir", "dirxml", "group", "groupEnd", "groupCollapsed", "profile", "profileEnd", "time", "timeEnd", "timeLog", "timeStamp", "Console", "_times", "_stdoutErrorHandler", "_stderrErrorHandler", "workerdConsole", "assert", "context", "console_default", "hrtime", "bigint", "WriteStream", "env", "ReadStream", "NODE_VERSION", "Process", "EventEmitter", "cwd", "globalProcess", "getBuiltinModule", "exit", "platform", "nextTick", "unenvProcess", "abort", "addListener", "allowedNodeEnvironmentFlags", "hasUncaughtExceptionCaptureCallback", "setUncaughtExceptionCaptureCallback", "loadEnvFile", "sourceMapsEnabled", "arch", "argv", "argv0", "chdir", "config", "connected", "constrainedMemory", "availableMemory", "cpuUsage", "debugPort", "dlopen", "disconnect", "emit", "emitWarning", "eventNames", "execArgv", "execPath", "finalization", "features", "getActiveResourcesInfo", "getMaxListeners", "kill", "listeners", "listenerCount", "memoryUsage", "on", "off", "once", "pid", "ppid", "prependListener", "prependOnceListener", "rawListeners", "release", "removeAllListeners", "removeListener", "report", "resourceUsage", "setMaxListeners", "setSourceMapsEnabled", "stderr", "stdin", "stdout", "title", "throwDeprecation", "traceDeprecation", "umask", "uptime", "version", "versions", "domain", "initgroups", "moduleLoadList", "reallyExit", "openStdin", "binding", "send", "exitCode", "channel", "getegid", "geteuid", "getgid", "getgroups", "getuid", "setegid", "seteuid", "setgid", "setgroups", "setuid", "permission", "mainModule", "_events", "_eventsCount", "_exiting", "_maxListeners", "_debugEnd", "_debugProcess", "_fatalException", "_getActiveHandles", "_getActiveRequests", "_kill", "_preload_modules", "_rawDebug", "_startProfilerIdleNotifier", "_stopProfilerIdleNotifier", "_tickCallback", "_disconnect", "_handleQueue", "_pendingMessage", "_channel", "_send", "_linkedBinding", "_process", "process_default", "onRequestPost", "hashPassword", "verifyTokenAndGetUserId", "currentCount", "response", "newResponse", "value", "_a", "result", "char", "prefix", "i", "drainBody", "env", "middleware_ensure_req_body_drained_default", "reduceError", "jsonError", "env", "error", "middleware_miniflare3_json_error_default", "__INTERNAL_WRANGLER_MIDDLEWARE__", "middleware_ensure_req_body_drained_default", "middleware_miniflare3_json_error_default", "middleware_insertion_facade_default", "__facade_middleware__", "__facade_register__", "__facade_invokeChain__", "env", "__facade_invoke__", "__facade_middleware__", "__Facade_ScheduledController__", "___Facade_ScheduledController__", "wrapExportedHandler", "__INTERNAL_WRANGLER_MIDDLEWARE__", "__facade_register__", "env", "__facade_invoke__", "wrapWorkerEntrypoint", "WRAPPED_ENTRY", "middleware_insertion_facade_default", "middleware_loader_entry_default"]
}
